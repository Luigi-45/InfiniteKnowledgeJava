/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package PresentationLayer.Docente;

import BusinessLayer.CursoBO;
import BusinessLayer.DocenteBO;
import BusinessLayer.RegistroCalificacionesBO;
import DataTransferObject.Curso;
import DataTransferObject.Docente;
import DataTransferObject.RegistroCalificaciones;
import Reports.ReporteJasper;
import Utilities.Validator.ValidatorTipoDatos;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import net.sf.jasperreports.view.JasperViewer;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
/**
 *
 * @author LAB-USR-HUAN-A0312
 */
public class Buscar_calificacion_docente extends javax.swing.JFrame {

    private String dni;
    private String nombreCompleto;
    private String correoElectronico;
    private DefaultTableModel modelo;
    private ArrayList<RegistroCalificaciones> registros;
    
    public Buscar_calificacion_docente() {
        initComponents();
        this.modelo = new DefaultTableModel();
        this.jtblRegistros.setModel(this.modelo); this.modelo.addColumn("Estudiante"); this.modelo.addColumn("Calif1");
        this.modelo.addColumn("Calif2"); this.modelo.addColumn("Calif3"); this.modelo.addColumn("Calif4");
        this.registros = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jlNombreDocente = new javax.swing.JLabel();
        jlCorreoDocente = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        listaCursos = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblRegistros = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jcoBimestre = new javax.swing.JComboBox<>();
        jtxtSalonClases = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(1000, 1000));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setVerifyInputWhenFocusTarget(false);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/maestro_png_by_gianferdinand_db4zcg5-fullview.png"))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("DOCENTE:");

        jlNombreDocente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jlNombreDocente.setText("Julio Perez Soto");

        jlCorreoDocente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jlCorreoDocente.setText("Jperezsoto@gmail.com");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel7.setText("GESTIONAR CALIFICACIONES");

        listaCursos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaCursosActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Curso:");

        jtblRegistros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Estudiante", "Calif1", "Calif2", "Calif3", "Calif4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jtblRegistros.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtblRegistrosKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jtblRegistros);

        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton5.setMnemonic('u');
        jButton5.setText("GUARDAR");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton8.setMnemonic('e');
        jButton8.setText("GENERAR REPORTE EXCEL");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Salón de clases:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Bimestre:");

        jcoBimestre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));
        jcoBimestre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcoBimestreActionPerformed(evt);
            }
        });

        jtxtSalonClases.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtSalonClasesKeyTyped(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setText("GENERAR REPORTE JASPER");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton7.setText("GENERAR REPORTE GRÁFICO");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel3)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(60, 60, 60)
                                        .addComponent(jLabel4))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(49, 49, 49)
                                        .addComponent(jlNombreDocente))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addComponent(jlCorreoDocente))))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(261, 261, 261)
                        .addComponent(jButton5)
                        .addGap(58, 58, 58)
                        .addComponent(jButton8))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtxtSalonClases))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(39, 39, 39)
                                .addComponent(listaCursos, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(55, 55, 55)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(jcoBimestre, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(292, 292, 292)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton7)
                            .addComponent(jButton2))))
                .addContainerGap(2216, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jlNombreDocente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlCorreoDocente, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(3, 3, 3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jcoBimestre, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(listaCursos, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtxtSalonClases, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton7)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Colegio_mayor_coar_logo (1) (3).png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel2.setText("COAR - INFINITE KNOWLEDGE");

        jButton1.setBackground(new java.awt.Color(255, 204, 204));
        jButton1.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jButton1.setMnemonic('i');
        jButton1.setText("Inicio");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 204, 204));
        jButton3.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jButton3.setMnemonic('g');
        jButton3.setText("Gestionar calificaciones");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 204, 204));
        jButton4.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jButton4.setMnemonic('m');
        jButton4.setText("Subir material a clase");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(255, 204, 204));
        jButton6.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jButton6.setMnemonic('n');
        jButton6.setText("Información personal");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(jButton1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(jLabel1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jButton4))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton3)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(jLabel2))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(73, 73, 73)
                .addComponent(jButton1)
                .addGap(31, 31, 31)
                .addComponent(jButton4)
                .addGap(43, 43, 43)
                .addComponent(jButton3)
                .addGap(44, 44, 44)
                .addComponent(jButton6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1041, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 809, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Pantalla_principal_docente ventana = new Pantalla_principal_docente();
        ventana.setDni(dni);
        ventana.setNombreCompleto(nombreCompleto);
        ventana.setCorreoElectronico(correoElectronico);
        ventana.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Subir_material_de_clase_docente ventana = new Subir_material_de_clase_docente();
        ventana.setDni(dni);
        ventana.setNombreCompleto(nombreCompleto);
        ventana.setCorreoElectronico(correoElectronico);
        ventana.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        Ver_informacion_personal_docente ventana = new Ver_informacion_personal_docente();
        ventana.setDni(dni);
        ventana.setNombreCompleto(nombreCompleto);
        ventana.setCorreoElectronico(correoElectronico);
        ventana.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jcoBimestreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcoBimestreActionPerformed
        actualizarRegistros();
    }//GEN-LAST:event_jcoBimestreActionPerformed

    private void listaCursosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaCursosActionPerformed
        actualizarRegistros();
    }//GEN-LAST:event_listaCursosActionPerformed

    private void jtxtSalonClasesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtSalonClasesKeyTyped
        if(this.jtxtSalonClases.getText().length()==2){
            evt.consume();
            actualizarRegistros();
        }
    }//GEN-LAST:event_jtxtSalonClasesKeyTyped

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        RegistroCalificacionesBO registroCalificacionesBO = new RegistroCalificacionesBO();
        boolean bandera = true;
        for(int i=0;i<this.modelo.getRowCount();i++){
            if(!ValidatorTipoDatos.isInteger((String) this.modelo.getValueAt(i, 1)) || !ValidatorTipoDatos.isInteger((String) this.modelo.getValueAt(i, 2)) ||
                    !ValidatorTipoDatos.isInteger((String) this.modelo.getValueAt(i, 3)) || !ValidatorTipoDatos.isInteger((String) this.modelo.getValueAt(i, 4))){
                JOptionPane.showMessageDialog(null, "Error, se ha detectado un valor no numérico");
                bandera = false;
                break;
            }
            
            if(Integer.parseInt((String) this.modelo.getValueAt(i, 1))>=0){
                try {
                    this.registros.get(i).setCalif1((String) this.modelo.getValueAt(i, 1));
                    this.registros.get(i).setCalif1S((String) this.modelo.getValueAt(i, 1));
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
            
            if(Integer.parseInt((String) this.modelo.getValueAt(i, 2))>=0){
                try {
                    this.registros.get(i).setCalif2((String) this.modelo.getValueAt(i, 2));
                    this.registros.get(i).setCalif2S((String) this.modelo.getValueAt(i, 2));
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
            
            if(Integer.parseInt((String) this.modelo.getValueAt(i, 3))>=0){
                try {
                    this.registros.get(i).setCalif3((String) this.modelo.getValueAt(i, 3));
                    this.registros.get(i).setCalif3S((String) this.modelo.getValueAt(i, 3));
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
            
            if(Integer.parseInt((String) this.modelo.getValueAt(i, 4))>=0){
                try {
                    this.registros.get(i).setCalif4((String) this.modelo.getValueAt(i, 4));
                    this.registros.get(i).setCalif4S((String) this.modelo.getValueAt(i, 4));
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
            
            if(this.registros.get(i).getCalif1S()!=null && this.registros.get(i).getCalif2S()!=null && this.registros.get(i).getCalif3S()!=null && this.registros.get(i).getCalif4S()!=null){
                this.registros.get(i).setPromedio(String.valueOf((this.registros.get(i).getCalif1() + this.registros.get(i).getCalif2() + this.registros.get(i).getCalif3() + this.registros.get(i).getCalif4())/4));
                this.registros.get(i).setPromedioS(String.valueOf((this.registros.get(i).getCalif1() + this.registros.get(i).getCalif2() + this.registros.get(i).getCalif3() + this.registros.get(i).getCalif4())/4));
            }
            
            if(this.registros.get(i).getPromedioS()!=null){
                if(this.registros.get(i).getPromedio()<11){
                    this.registros.get(i).setEstadoAprobacion("Desaprobado");
                }
                else if((this.registros.get(i).getPromedio()>=11)&&(this.registros.get(i).getPromedio()<18)){
                    this.registros.get(i).setEstadoAprobacion("Aprobado");
                }
                else{
                    this.registros.get(i).setEstadoAprobacion("Aprobado con mérito");
                }
            }
        }
        
        if(bandera){
            try {
                registroCalificacionesBO.actualizarCompleto2(this.registros);
                JOptionPane.showMessageDialog(null, "Se han actualizado los registros satisfactoriamente");
            }
            catch (Exception ex) {
                ex.printStackTrace();
            }
        }
        actualizarRegistros();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        Docente docente = new Docente();
        try{
            DocenteBO docenteBO = new DocenteBO();
            docente = docenteBO.buscarPorDNI(this.getDni());
        }
        catch(Exception e){
            e.printStackTrace();
        }
        
        JFileChooser selector = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos de Excel","xls");
        selector.setFileFilter(filtro);
        selector.setName("Guardar reporte de calificaciones");
        selector.setAcceptAllFileFilterUsed(false);
        if(selector.showSaveDialog(null)== JFileChooser.APPROVE_OPTION){
            String ruta = selector.getSelectedFile().toString().concat(".xls");
            try{
                File archivoXLS = new File(ruta);
                if(archivoXLS.exists()){
                    archivoXLS.delete();
                }
                archivoXLS.createNewFile();
                Workbook libro = new HSSFWorkbook();
                FileOutputStream archivo = new FileOutputStream(archivoXLS);
                
                for(int m=1;m<5;m++){
                    Sheet bimestre1 = libro.createSheet("Bimestre "+m);
                    bimestre1.setDisplayGridlines(false);

                    for(int i=0;i<5;i++){
                        Row fila = bimestre1.createRow(i);
                        for(int j=0;j<2;j++){
                            Cell celda = fila.createCell(j);
                            switch(i){
                                case 0:
                                    switch(j){
                                        case 0:
                                            celda.setCellValue("Docente: "); break;
                                        case 1:
                                            celda.setCellValue(docente.getNombreCompleto()); break;
                                    }
                                    break;
                                case 1:
                                   switch(j){
                                        case 0:
                                            celda.setCellValue("Curso: "); break;
                                        case 1:
                                            celda.setCellValue((String) this.listaCursos.getSelectedItem()); break;
                                    }
                                    break;
                                case 2:
                                   switch(j){
                                        case 0:
                                            celda.setCellValue("Salón: "); break;
                                        case 1:
                                            celda.setCellValue(this.jtxtSalonClases.getText()); break;
                                    }
                                    break;
                               case 3:
                                   switch(j){
                                        case 0:
                                            celda.setCellValue("Bimestre: "); break;
                                        case 1:
                                            celda.setCellValue(m); break;
                                    }
                                    break;
                               case 4:
                                   switch(j){
                                        case 0:
                                            celda.setCellValue("Emisión: "); break;
                                        case 1:
                                            celda.setCellValue(new Date().toString()); break;
                                    }
                                    break;
                            }
                        }
                    }
                    ArrayList<RegistroCalificaciones> registros = new ArrayList<RegistroCalificaciones>();

                    try{
                        RegistroCalificacionesBO registroCalificacionesBO = new RegistroCalificacionesBO();
                        CursoBO cursoBO = new CursoBO();

                        registros = registroCalificacionesBO.buscarParaDocente(this.getDni(), cursoBO.buscarPorNombreExacto((String) this.listaCursos.getSelectedItem()).getCursoId(), 
                        this.jtxtSalonClases.getText(), String.valueOf(m));
                    }
                    catch(Exception e){
                        e.printStackTrace();
                    }

                    if(registros.size()!=0){
                        for(int i=5;i<registros.size()+6;i++){
                            Row fila = bimestre1.createRow(i);
                            for(int j=0;j<8;j++){
                                Cell celda = fila.createCell(j);
                                if(i==5){
                                    switch(j){
                                        case 0:
                                            celda.setCellValue("N°"); break;
                                        case 1:
                                            celda.setCellValue("Estudiante"); break;
                                        case 2:
                                            celda.setCellValue("Calif. 1"); break;
                                        case 3:
                                            celda.setCellValue("Calif. 2"); break;
                                        case 4:
                                            celda.setCellValue("Calif. 3"); break;
                                        case 5:
                                            celda.setCellValue("Calif. 4"); break;
                                        case 6:
                                            celda.setCellValue("Promedio"); break;
                                        case 7:
                                            celda.setCellValue("Estado"); break;
                                    }
                                }
                                else{
                                    switch(j){
                                        case 0:
                                            celda.setCellValue(String.valueOf(i-5)); break;
                                        case 1:
                                            celda.setCellValue(registros.get(i-6).getEstudiante()); break;
                                        case 2:
                                            celda.setCellValue(registros.get(i-6).getCalif1()); break;
                                        case 3:
                                            celda.setCellValue(registros.get(i-6).getCalif2()); break;
                                        case 4:
                                            celda.setCellValue(registros.get(i-6).getCalif3()); break;
                                        case 5:
                                            celda.setCellValue(registros.get(i-6).getCalif4()); break;
                                        case 6:
                                            celda.setCellValue(registros.get(i-6).getPromedio()); break;
                                        case 7:
                                            celda.setCellValue(registros.get(i-6).getEstadoAprobacion()); break;
                                    }
                                }
                            }
                        }
                    }
                }
                
                libro.write(archivo);
                archivo.close();
                Desktop.getDesktop().open(archivoXLS);
            }
            catch (IOException | NumberFormatException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jtblRegistrosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtblRegistrosKeyTyped

    }//GEN-LAST:event_jtblRegistrosKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try{
            Map<String, Object> params = new HashMap<String, Object>();

            params.put("DOCENTEDNI", this.getDni());
            params.put("CURSOID",new CursoBO().buscarPorNombreExacto((String) this.listaCursos.getSelectedItem()).getCursoId());
            params.put("SALONCLASES", this.jtxtSalonClases.getText());
            params.put("BIMESTRE", (String) this.jcoBimestre.getSelectedItem());
            
            JasperViewer ventana = ReporteJasper.mostrarReporte("\\src\\main\\java\\Reports\\reporteCalificaciones.jrxml",params);
            ventana.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            ventana.setVisible(true);
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        try{
            Map<String, Object> params = new HashMap<String, Object>();

            params.put("DNIDOCENTE", this.getDni());
            params.put("CURSOID",new CursoBO().buscarPorNombreExacto((String) this.listaCursos.getSelectedItem()).getCursoId());
            params.put("SALONCLASES", this.jtxtSalonClases.getText());
            params.put("BIMESTRE", (String) this.jcoBimestre.getSelectedItem());
            params.put("NOMBREDOCENTE", new DocenteBO().buscarPorDNI(this.getDni()).getNombreCompleto());
            params.put("NOMBRECURSO",(String) this.listaCursos.getSelectedItem());
            
            JasperViewer ventana = ReporteJasper.mostrarReporte("\\src\\main\\java\\Reports\\reporteGrafico.jrxml",params);
            ventana.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            ventana.setVisible(true);
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton7ActionPerformed
    
    public String getDni() {
        return dni;
    }

    public void setDni(String dni) {
        this.dni = dni;
        actualizarCursos();
    }

    public String getNombreCompleto() {
        return nombreCompleto;
    }

    public void setNombreCompleto(String nombreCompleto) {
        this.nombreCompleto = nombreCompleto;
        this.jlNombreDocente.setText(this.getNombreCompleto());
    }

    public String getCorreoElectronico() {
        return correoElectronico;
    }

    public void setCorreoElectronico(String correoElectronico) {
        this.correoElectronico = correoElectronico;
        this.jlCorreoDocente.setText(this.getCorreoElectronico());
    }
    
     private void actualizarCursos(){
        try{
            this.listaCursos.removeAllItems();
            
            CursoBO cursoBO = new CursoBO();
            ArrayList<Curso> cursos = cursoBO.listarCursosParaDocente(this.getDni());
            for(Curso i:cursos){
                this.listaCursos.addItem(i.getNombre());
            }
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }
     
    private void limpiarTabla(){
        int fila = this.jtblRegistros.getRowCount();
        for(int i=fila-1; i>=0; i--){
            this.modelo.removeRow(i);
        }
    }
     
    private void actualizarRegistros(){
        try{
            limpiarTabla();
            RegistroCalificacionesBO registroCalificacionesBO = new RegistroCalificacionesBO();
            CursoBO cursoBO = new CursoBO();
            
            ArrayList<RegistroCalificaciones> registros = registroCalificacionesBO.buscarParaDocente(this.getDni(), cursoBO.buscarPorNombreExacto((String) this.listaCursos.getSelectedItem()).getCursoId(), 
            this.jtxtSalonClases.getText(), (String) this.jcoBimestre.getSelectedItem());
            
            if(registros!=null){
                for(RegistroCalificaciones i:registros){
                    String[] datos = {i.getEstudiante(), String.valueOf(i.getCalif1()), String.valueOf(i.getCalif2()), String.valueOf(i.getCalif3()),
                    String.valueOf(i.getCalif4())};

                    this.modelo.addRow(datos);
                }
            }
            
            this.registros = registros;
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Buscar_calificacion_docente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Buscar_calificacion_docente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Buscar_calificacion_docente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Buscar_calificacion_docente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Buscar_calificacion_docente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jcoBimestre;
    private javax.swing.JLabel jlCorreoDocente;
    private javax.swing.JLabel jlNombreDocente;
    private javax.swing.JTable jtblRegistros;
    private javax.swing.JTextField jtxtSalonClases;
    private javax.swing.JComboBox<String> listaCursos;
    // End of variables declaration//GEN-END:variables
}
